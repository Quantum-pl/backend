services:
    backend:
        container_name: "Quantum-backend"
        hostname: 'backend'
        networks:
            - quantum-network
        restart: unless-stopped
        pull_policy: build
        depends_on:
            - postgres
            - elastic
        build:
            context: .
            dockerfile: deploy/Dockerfile
            target: production
        environment:
            DB_HOST: 'postgres'
            ELASTIC_HOST: 'elastic'
        env_file:
            - .env
        ports:
            - "8000:8000"

    postgres:
        container_name: 'Quantum-postgres'
        hostname: 'postgres'
        networks:
            - quantum-network
        restart: unless-stopped
        image: postgres:alpine
        env_file:
            - .env
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - ${DB_PORT}:${DB_PORT}
        volumes:
            - quantum-postgres:/var/lib/postgresql/data

    elastic:
        container_name: "Quantum-elastic"
        hostname: 'elastic'
        networks:
            - quantum-network
        image: elasticsearch:8.15.3
        restart: unless-stopped
        env_file:
            - .env
        environment:
            - "discovery.type=single-node"
            - "xpack.security.enabled=false"
        ports:
            - ${ELASTIC_PORT}:${ELASTIC_PORT}
        volumes:
            - quantum-elastic:/usr/share/elasticsearch/data

volumes:
  quantum-postgres:
  quantum-elastic:

networks:
  quantum-network:
    driver: bridge
